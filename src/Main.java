import GraphEntity.MyGraph;

import java.io.UnsupportedEncodingException;

public class Main {
    public static void main(String[] args) {
        try {
            System.setOut(new java.io.PrintStream(System.out, true, "UTF-8"));
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        int n = 45, e = 106;
        //起点、终点、可靠度
        double data[][] = {{0, 13, 0.999}, {0, 14, 0.999}, {0, 15, 0.999}, {0, 4, 0.999}, {0, 5, 0.999},
                {1, 16, 0.999}, {1, 17, 0.999}, {1, 4, 0.999}, {1, 5, 0.999},
                {2, 18, 0.999}, {2, 19, 0.999}, {2, 20, 0.999}, {2, 21, 0.999}, {2, 22, 0.999}, {2, 4, 0.999}, {2, 5, 0.999},
                {3, 23, 0.999}, {3, 24, 0.999}, {3, 4, 0.999}, {3, 5, 0.999},
                {4, 25, 0.999}, {4, 6, 0.999}, {4, 7, 0.999}, {4, 10, 0.999},
                {5, 26, 0.999}, {5, 27, 0.999}, {5, 8, 0.999}, {5, 9, 0.999}, {5, 10, 0.999},
                {6, 28, 0.999}, {6, 29, 0.999}, {6, 7, 0.999}, {6, 11, 0.999},
                {7, 30, 0.999}, {7, 31, 0.999}, {7, 32, 0.999}, {7, 10, 0.999}, {7, 11, 0.999},
                {8, 33, 0.999}, {8, 34, 0.999}, {8, 35, 0.999}, {8, 9, 0.999}, {8, 10, 0.999}, {8, 12, 0.999},
                {9, 36, 0.999}, {9, 37, 0.999}, {9, 12, 0.999},
                {10, 38, 0.999}, {10, 39, 0.999},
                {11, 40, 0.999}, {11, 41, 0.999},
                {12, 42, 0.999}, {12, 43, 0.999},
                {13, 0, 0.999}, {14, 0, 0.999}, {15, 0, 0.999}, {4, 0, 0.999}, {5, 0, 0.999},
                {16, 1, 0.999}, {17, 1, 0.999}, {4, 1, 0.999}, {5, 1, 0.999},
                {18, 2, 0.999}, {19, 2, 0.999}, {20, 2, 0.999}, {21, 2, 0.999}, {22, 2, 0.999}, {4, 2, 0.999}, {5, 2, 0.999},
                {23, 3, 0.999}, {24, 3, 0.999}, {4, 3, 0.999}, {5, 3, 0.999},
                {25, 4, 0.999}, {6, 4, 0.999}, {7, 4, 0.999}, {10, 4, 0.999},
                {26, 5, 0.999}, {27, 5, 0.999}, {8, 5, 0.999}, {9, 5, 0.999}, {10, 5, 0.999},
                {28, 6, 0.999}, {29, 6, 0.999}, {7, 6, 0.999}, {11, 6, 0.999},
                {30, 7, 0.999}, {31, 7, 0.999}, {32, 7, 0.999}, {10, 7, 0.999}, {11, 7, 0.999},
                {33, 8, 0.999}, {34, 8, 0.999}, {35, 8, 0.999}, {9, 8, 0.999}, {10, 8, 0.999}, {12, 8, 0.999},
                {36, 9, 0.999}, {37, 9, 0.999}, {12, 9, 0.999},
                {38, 10, 0.999}, {39, 10, 0.999},
                {40, 11, 0.999}, {41, 11, 0.999},
                {42, 12, 0.999}, {43, 12, 0.999}
        };

        MyGraph g = new MyGraph(n, e);
        g.createMyGraph(g, n, e, data);

        // 调用ksp并打印最终结果
        ShortestPath ksp = new ShortestPath();
        System.out.println(ksp.KSP_Yen(g, 16, 43, 3));
    }

}